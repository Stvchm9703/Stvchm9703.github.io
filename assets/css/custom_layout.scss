// @import "~bulma/sass/utilities/functions";
// @import  "~buefy/src/scss/utils/_all.scss";
// @import "media_rule.scss";
// change
@import "bulma-timeline.sass";
// @import "color";

html {
  font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI",
    Roboto, "Helvetica Neue", Arial, sans-serif;
  font-size: 16px;
  word-spacing: 1px;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  box-sizing: border-box;
  background-color: #35495e;
  height: 100vh;
  width: 100vw;
}

*,
*:before,
*:after {
  box-sizing: border-box;
  margin: 0;
}


.title {
  display: block;
  font-weight: 300;
  font-size: 100px;
  color: #eee;
  letter-spacing: 1px;
}

.subtitle {
  font-weight: 300;
  font-size: 42px;
  color: #ddd;
  word-spacing: 5px;
  padding-bottom: 15px;
}

// scrollbar
* {
  scrollbar-width: thin;
  scrollbar-color: #35495e rgba(200, 200, 230, 0.7);
  scroll-padding: 0px 8px 8px 0px;

  /* Works on Chrome/Edge/Safari */
  &::-webkit-scrollbar {
    width: 5px;

    &-track {
      background-color: rgba(200, 200, 230, 0.4);
    }

    &-thumb {
      background-color: #35495e;
    }
  }
}


.footer{
  position: static;
  width: 100%;
  bottom: 0;
}

.sv-full-height-layout {
 
  .footer {
    position: fixed;
    bottom:1.5em;
    padding: 2em 1.5em;
  }
}
.sv-light-mode .footer{
  background-color: $mono-set-3;
  color: $mono-set-12;

  a,
  strong {
    color: $mono-set-10;
  }
}
.sv-dark-mode .footer {
  background-color: $mono-set-13;
  color: $mono-set-2;
  a, strong {
    color: $primary;
  }
}

.empty-contain {
  min-height: 80vh;
  // width: 100%;
}


// about page
.background_layer {
  background-repeat: no-repeat no-repeat;
  background-position: center;
  background-attachment: fixed;
  background-size: cover;
}

.front-layer {
  color: #98b9dc;

  .aboutBlockMod {
    .hero-body {
      background: rgba(40, 44, 52, 0.5);
    }
  }

  .has-border-line {
    border-bottom: 10px solid #8241f9;

    @each $name,
    $pair in $colors {
      $color: nth($pair, 1);
      $color-invert: nth($pair, 2);

      &.is-#{$name} {
        border-bottom-color: $color;
      }
    }

    @include when-mobile {
      border-bottom-width: 5px;
    }
  }
}

// about-page
.column.lang-card-grid {
  display: grid;
  .card{
    background-color: $mono-set-0;
    color: $mono-set-10;
    p {
      color: $mono-set-10;
    }
  }
  @include when-small-mobile {
    dsiplay: inline-flex;
  }
}

.sv-dark-mode .lang-card-grid {
  .card {
    background-color: $mono-set-0;
    color: $mono-set-10;
    p {
      color: $mono-set-10;
    }

  }
}

.timeline.is-center-manually {
  .timeline-header {
    display: flex;
    width: 100%;
    align-self: center;
  }

  .timeline-item {
    width: 50%;
    align-self: flex-end;

    &.left-side {
      align-self: flex-start;
      margin-left: 0;
      margin-right: $timeline-header-width / 2;

      &::before {
        right: -$timeline-line-width;
        left: auto;
      }

      .timeline-marker {
        left: auto;
        right: -(($timeline-marker-size / 2) - $timeline-marker-border-size / 2) - $timeline-line-width;

        &.is-image {
          @each $dimension in $dimensions {
            &.is-#{$dimension}x#{$dimension} {
              left: auto;
              right: ($dimension / 2) * -1px;
            }
          }
        }

        &.is-icon {
          left: auto;
          right: -(($timeline-marker-icon-size / 2) - $timeline-marker-border-size / 2) - $timeline-line-width;
        }
      }

      .timeline-content {
        padding: $timeline-rtl-content-padding;
        text-align: right;
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        flex-basis: 100%;
      }
    }

    &.right-side {
      margin-left: $timeline-item-padding-left;
      padding-bottom: $timeline-item-padding-bottom;

      &::before {
        content: "";
        background-color: $timeline-line-color;
        display: block;
        width: $timeline-line-width;
        height: 100%;
        position: absolute;
        top: 0;
      }

      .timeline-marker {
        left: -(($timeline-marker-size / 2) - $timeline-marker-border-size / 2) - $timeline-line-width;
        right: auto;

        &.is-image {
          @each $dimension in $dimensions {
            &.is-#{$dimension}x#{$dimension} {
              right: auto;
              left: ($dimension / 2) * -1px;
            }
          }
        }

        &.is-icon {
          right: auto;
          left: -(($timeline-marker-icon-size / 2) - $timeline-marker-border-size / 2) - $timeline-line-width;
        }
      }
    }

  }
}

.timeline.is-mobile-left {
  @include when-mobile {

    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;

    .timeline-header {
      width: $timeline-header-width;
      align-self: flex-start;
      align-items: flex-start;

    }

    .timeline-item,
    .timeline-item.left-side,
    .timeline-item.right-side {
      width: 100%;
      display: flex;
      display: -ms-flexbox;
      display: -webkit-flex;
      position: relative;
      // align-self: flex-start;
      justify-content: flex-start;
      margin-left: $timeline-item-padding-left;
      padding-bottom: $timeline-item-padding-bottom;
      align-self: flex-start;
      align-items: flex-start;

      &::before {
        position: absolute;
        left: 0;
        top: 0;
      }

      .timeline-marker {
        left: -0.35em;
        right: auto;

        &.is-image,
        &.is-icon {
          right: auto;
          left: -(($timeline-marker-icon-size / 2) - $timeline-marker-border-size / 2);
        }
      }

      .timeline-content {
        align-items: flex-start;
        padding: 1em 0 0 .5em;
        padding: $timeline-content-padding;
        text-align: left;
      }
    }
  }
}

.timeline-marker.is-icon.is-info.is-large {
  height: 2.7em;
  width: 2.7em;
  left: -1.2em !important;

  .mdi-36px {
    height: 12px;
  }
}